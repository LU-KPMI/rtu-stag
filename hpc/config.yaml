# vim: syntax=python expandtab
#
#     StaG Metagenomic Workflow Collaboration
#                 configuration file
#
# Configuration settings marked with [Required] are only required if the
# pipeline step for that setting is included. Set which steps to include
# under the "Pipeline steps included" heading. The default settings are to
# only run read preprocessing steps.


#########################
# Run configuration
#########################
base_path: "${prefix}/"
inputdir: "input"
input_fn_pattern: "{sample}_{readpair}.fq.gz"
outdir: "output_dir"
logdir: "output_dir/logs"
dbdir: "databases"           # Databases will be downloaded to this dir, if requested
report: "StaG_report-"       # Filename prefix for report file ("-{datetime}.html" automatically appended)
email: ""                    # Email to send status message after completed/failed run.


#########################
# Pipeline steps included
#########################
qc_reads: ${ENABLE_QC_READS}
host_removal: ${ENABLE_HOST_REMOVAL}
naive:
    assess_depth: False
    sketch_compare: False
taxonomic_profile:
    kaiju: False
    kraken2: ${ENABLE_KRAKEN2}
    metaphlan2: False
functional_profile:
    humann2: False
antibiotic_resistance:
    groot: ${ENABLE_GROOT}
    amrplusplus: False
mappers:
    bbmap: False
    bowtie2: False
assembly: False
binning: False
multiqc_report: False


#########################
# Preprocessing
#########################
fastp:
    extra: ""
remove_host:
    db_path: "databases/human_reference"              # [Required] Path to folder containing a Kraken2 database with host sequences (taxo.k2d, etc.)
    confidence: 0.1          # Kraken2 confidence parameter, normally set to 0.1
    extra: "--quick"         # Additional command line arguments to kraken2
    keep_kraken: False       # StaG deletes the kraken and kreport output files by default, set to True to keep them.
    keep_kreport: False
    kraken2_path: "kraken2/"        # enable the ability to specify the location of Kraken2 due to the conda version throwing segfaults
multiqc:
    extra: ""


#########################
# Naive sample analyses
#########################
bbcountunique:
    interval: 5000           # Typically set to 10000, but test data requires <=5035


#########################
# Taxonomic profiling
#########################
kaiju:
    db: "/scratch/databases/kaiju_standard/kaiju_db_refseq.fmi"                   # [Required] Path to Kaiju DB file
    nodes: "/scratch/databases/kaiju_standard/nodes.dmp"                # [Required] Path to Kaiju taxonomy nodes.dmp
    names: "/scratch/databases/kaiju_standard/names.dmp"                # [Required] Path to Kaiju taxonomy names.dmp
    levels: ["species", "genus", "family"]    # Level(s) to summarize Kaiju report to, pick from: superkingdom, phylum, class, order, family, genus, species
    feature_column: "taxon_name"    # Feature column to use in all_samples summary
    value_column: "percent"    # Value column top use in all_samples summary. Options are typically "percent" or "reads"

kraken2:
    db: "databases/full_ref_bafp"                   # [Required] Path to Kraken2 DB folder
    confidence: 0.1          # Kraken2 confidence score, float in [0,1]
    extra: ""                # Extra command line arguments for kraken2 (do not add/change output files)
    bracken:
        kmer_distrib: "${prefix}/databases/full_ref_bafp/database150mers.kmer_distrib"     # [Required for Bracken] Path to kmer_distrib file for Kraken2 DB specified above
        levels: "S G"        # Space-separated list of taxonomic levels to produce tables for (e.g. "F G S" for Family, Genus, Species)
        thresh: 10           # Threshold for minimum number of reads from Kraken
    filter_bracken:          # Arguments to filter_bracken_out.py to include/exclude certain taxa
        include: ""
        exclude: "--exclude 9605 9606"  # Taxid 9605 and 9606 are (G) Homo and (S) Homo sapiens
    kraken2_path: "kraken2/"        # enable the ability to specify the location of Kraken2 due to the conda version throwing segfaults

metaphlan2:
    bt2_db_dir: "databases/func_databases/metaphlan2/db_v20"           # [Required] Path to MetaPhlAn2 database dir
    bt2_index: "mpa_v20_m200"            # [Required] Name of MetaPhlAn2 database index
    extra: ""                # Extra command line arguments for metaphlan2.py
    heatmap:
        level: "Species"         # Taxononomic level: Kingdom, Phylum, Class, Order, Family, Genus, Species, or Strain
        topN: 50                 # Number of top taxa to include in heatmap.
        pseudocount: -1          # Negative value means to autocompute pseudocount
        colormap: "viridis"      # Stand ard matplotlib and seaborn colormaps
        method: "average"        # Linkage method, see scipy.cluster.hierarchy.linkage
        metric: "braycurtis"     # Distrance metric to use
        extra: ""                # Extra params, mostly to set loglevel to DEBUG in case of problems.


#########################
# Functional profiling
#########################
humann2:
    nucleotide_db: "databases/func_databases/humann2/chocophlan"        # [Required] Path to ChocoPhlAn DB directory
    protein_db: "databases/func_databases/humann2/uniref"           # [Required] Path to protein database (typically UniRef90)
    norm_method: "relab"     # Normalization method (HUMAnN2 default is "cpm")
    norm_mode: "community"   # Normalization mode, "community" or "levelwise"


#########################
# Antibiotic Resistance
#########################
groot:
    db: "arg-annot"          # Used when downloading and indexing DB with "create_groot_index" rule
    index: "databases/arg-annot_index"                # [Required] Path to groot index
    minlength: 140           # Minlength for groot index
    maxlength: 160           # Maxlength for groot index
    covcutoff: 0.97          # Coverage cutoff for groot report
    lowcov: False            # Report ARGs with no 5' or 3' coverage. Overrides covcutoff.

amrplusplus:
    megares:
        fasta: ""            # Leave as "" to run with megares_modified_database_v2.00.fasta or specify database path
        annotation: ""       # Leave as "" to run with megares_modified_annotations_v2.00.csv or specify annotations path
    rarefaction:
        min: "5"             # Starting rarefaction level
        max: "100"           # Ending rarefaction level
        skip: "5"            # Number of levels to skip
        samples: "1"         # Number of iterations to sample at
    resistome:
        threshold: "80"      # Resistome threshold


#########################
# Mappers
#########################
bbmap:
    - db_name: ""              # [Required] Custom name for BBMap database
      db_path: ""              # [Required] Path to BBMap database (folder should contain a 'ref' folder)
      min_id: 0.76             # Minimum id for read alignment, BBMap default is 0.76
      extra: ""                # Extra BBMap command line parameters
      counts_table:
          annotations: ""      # Tab-separated annotation file with headers, first column is full FASTA header of reference sequences
          columns: ""          # Column names in header of annotation file to include summaries of
      featureCounts:
          annotations: ""      # [Required] Full path to GTF format annotations for database sequences. If not set, featureCounts summary will be skipped.
          feature_type: ""     # Feature type to produce counts for, default is "gene"
          attribute_type: ""   # Attribute type to summarize counts for, default is "gene_id" (any attribute in the GTF file's attribute field can be used)
          extra: ""            # Extra featureCount command line parameters
bowtie2:
    - db_prefix: ""            # [Required] Full path to Bowtie2 index (not including file extension)
      extra: ""                # Extra bowtie2 commandline parameters
      counts_table:
          annotations: ""      # Tab-separated annotation file with headers, first column is full FASTA header of reference sequences
          columns: ""          # Column names in header of annotation file to include summaries of
      featureCounts:
          annotations: ""      # [Required] Full path to GTF format annotations for database sequences. If not set, featureCounts summary will be skipped.
          feature_type: ""     # Feature type to produce counts for, default is "gene"
          attribute_type: ""   # Attribute type to summarize counts for, default is "gene_id" (any attribute in the GTF file's attribute field can be used)
          extra: ""            # Extra featureCount command line parameters


#########################
# Assembly
#########################
metawrap:
    assembler: "megahit"      # Use "megahit" or "spades"
    universal: "--universal"  # Use universal marker genes
    minimum_completion: 70
    maximum_contamination: 10
